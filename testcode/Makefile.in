srcdir = @srcdir@
CYGPATH_W = @CYGPATH_W@

all: \
	examine@EXEEXT@ simple8bit@EXEEXT@ readvol@EXEEXT@ \
	raypick@EXEEXT@ rgbload@EXEEXT@ changingdataset@EXEEXT@ \
	orthoslicer@EXEEXT@

## 

VOLUMERENDER_UI_OBJECTS = \
        $(srcdir)/VolumeRenderHandler.@OBJEXT@ moc_VolumeRenderHandler.@OBJEXT@ \
        SoVolumeRender_ctrl.@OBJEXT@ moc_SoVolumeRender_ctrl.@OBJEXT@

TRANSFERFUNCTION_UI_OBJECTS = \
        $(srcdir)/TransferFunctionHandler.@OBJEXT@ moc_TransferFunctionHandler.@OBJEXT@ \
        SoTransferFunction_ctrl.@OBJEXT@ moc_SoTransferFunction_ctrl.@OBJEXT@

ORTHOSLICE_UI_OBJECTS = \
        $(srcdir)/OrthoSliceHandler.@OBJEXT@ moc_OrthoSliceHandler.@OBJEXT@ \
        SoOrthoSlice_ctrl.@OBJEXT@ moc_SoOrthoSlice_ctrl.@OBJEXT@

## 

READVOL_OBJECTS = \
        $(srcdir)/readvol.@OBJEXT@ $(TRANSFERFUNCTION_UI_OBJECTS) $(VOLUMERENDER_UI_OBJECTS)

EXAMINE_OBJECTS = \
        $(srcdir)/examine.@OBJEXT@ $(srcdir)/utility.@OBJEXT@

ORTHOSLICER_OBJECTS = \
        $(srcdir)/orthoslicer.@OBJEXT@ $(srcdir)/utility.@OBJEXT@ \
	$(ORTHOSLICE_UI_OBJECTS) $(TRANSFERFUNCTION_UI_OBJECTS)

SIMPLE8BIT_OBJECTS = \
        $(srcdir)/simple8bit.@OBJEXT@ $(srcdir)/utility.@OBJEXT@

CHANGINGDATASET_OBJECTS = \
        $(srcdir)/changingdataset.@OBJEXT@

RAYPICK_OBJECTS = \
        $(srcdir)/raypick.@OBJEXT@ $(srcdir)/utility.@OBJEXT@

RGBLOAD_OBJECTS = \
        $(srcdir)/rgbload.@OBJEXT@

clean:
	@rm -f rgbload@EXEEXT@ $(RGBLOAD_OBJECTS) $(srcdir)/rgbload.cpp \
              raypick@EXEEXT@ $(RAYPICK_OBJECTS) $(srcdir)/raypick.cpp \
              examine@EXEEXT@ $(EXAMINE_OBJECTS) $(srcdir)/examine.cpp \
              orthoslicer@EXEEXT@ $(ORTHOSLICER_OBJECTS) $(srcdir)/orthoslicer.cpp \
              simple8bit@EXEEXT@ $(SIMPLE8BIT_OBJECTS) $(srcdir)/simple8bit.cpp \
              changingdataset@EXEEXT@ $(CHANGINGDATASET_OBJECTS) $(srcdir)/changingdataset.cpp \
              readvol@EXEEXT@ $(READVOL_OBJECTS) $(srcdir)/readvol.cpp \
              SoTransferFunction_ctrl.h SoTransferFunction_ctrl.cpp moc_SoTransferFunction_ctrl.cpp \
              moc_TransferFunctionHandler.cpp \
              SoOrthoSlice_ctrl.h SoOrthoSlice_ctrl.cpp moc_SoOrthoSlice_ctrl.cpp \
              moc_OrthoSliceHandler.cpp

## common code

$(srcdir)/utility.@OBJEXT@: $(srcdir)/utility.cpp
	soqt-config --compile $<

# (SoTransferFunction UI)

SoTransferFunction_ctrl.h: $(srcdir)/SoTransferFunction_ctrl.ui
	uic `$CYGPATH_W $<` -o $@

SoTransferFunction_ctrl.cpp: $(srcdir)/SoTransferFunction_ctrl.ui SoTransferFunction_ctrl.h
	uic -impl $*.h `$CYGPATH_W $<` -o $@

SoTransferFunction_ctrl.@OBJEXT@: SoTransferFunction_ctrl.cpp
	soqt-config --compile $<

moc_SoTransferFunction_ctrl.cpp: SoTransferFunction_ctrl.h
	moc -o $@ `$CYGPATH_W $<`

moc_SoTransferFunction_ctrl.@OBJEXT@: moc_SoTransferFunction_ctrl.cpp
	soqt-config --compile $<

moc_TransferFunctionHandler.cpp: $(srcdir)/TransferFunctionHandler.h
	moc -o $@ `$CYGPATH_W $<`

moc_TransferFunctionHandler.@OBJEXT@: moc_TransferFunctionHandler.cpp
	soqt-config --compile $<

$(srcdir)/TransferFunctionHandler.@OBJEXT@: $(srcdir)/TransferFunctionHandler.cpp SoTransferFunction_ctrl.h moc_SoTransferFunction_ctrl.cpp
	CPPFLAGS="`simvoleon-config --cppflags` -I." soqt-config --compile $<

# (SoVolumeRender UI)

SoVolumeRender_ctrl.h: $(srcdir)/SoVolumeRender_ctrl.ui
	uic `$CYGPATH_W $<` -o $@

SoVolumeRender_ctrl.cpp: $(srcdir)/SoVolumeRender_ctrl.ui SoVolumeRender_ctrl.h
	uic -impl $*.h `$CYGPATH_W $<` -o $@

SoVolumeRender_ctrl.@OBJEXT@: SoVolumeRender_ctrl.cpp
	soqt-config --compile $<

moc_SoVolumeRender_ctrl.cpp: SoVolumeRender_ctrl.h
	moc -o $@ $<

moc_SoVolumeRender_ctrl.@OBJEXT@: moc_SoVolumeRender_ctrl.cpp
	soqt-config --compile $<

moc_VolumeRenderHandler.cpp: $(srcdir)/VolumeRenderHandler.h
	moc -o $@ `$CYGPATH_W $<`

moc_VolumeRenderHandler.@OBJEXT@: moc_VolumeRenderHandler.cpp
	soqt-config --compile $<

$(srcdir)/VolumeRenderHandler.@OBJEXT@: $(srcdir)/VolumeRenderHandler.cpp SoVolumeRender_ctrl.h moc_SoVolumeRender_ctrl.cpp
	CPPFLAGS=`simvoleon-config --cppflags` soqt-config --compile $<

# (SoOrthoSlice UI)

SoOrthoSlice_ctrl.h: $(srcdir)/SoOrthoSlice_ctrl.ui
	uic `$CYGPATH_W $<` -o $@

SoOrthoSlice_ctrl.cpp: $(srcdir)/SoOrthoSlice_ctrl.ui SoOrthoSlice_ctrl.h
	uic -impl $*.h `$CYGPATH_W $<` -o $@

SoOrthoSlice_ctrl.@OBJEXT@: SoOrthoSlice_ctrl.cpp
	soqt-config --compile $<

moc_SoOrthoSlice_ctrl.cpp: SoOrthoSlice_ctrl.h
	moc -o $@ $<

moc_SoOrthoSlice_ctrl.@OBJEXT@: moc_SoOrthoSlice_ctrl.cpp
	soqt-config --compile $<

moc_OrthoSliceHandler.cpp: $(srcdir)/OrthoSliceHandler.h
	moc -o $@ `$CYGPATH_W $<`

moc_OrthoSliceHandler.@OBJEXT@: moc_OrthoSliceHandler.cpp
	soqt-config --compile $<

$(srcdir)/OrthoSliceHandler.@OBJEXT@: $(srcdir)/OrthoSliceHandler.cpp SoOrthoSlice_ctrl.h moc_SoOrthoSlice_ctrl.cpp
	CPPFLAGS="`simvoleon-config --cppflags` -I." soqt-config --compile $<


## ``readvol'' example

$(srcdir)/readvol.cpp: $(srcdir)/readvol.cpp.in
	@soqt-config --ac-subst $<

$(srcdir)/readvol.@OBJEXT@: $(srcdir)/readvol.cpp $(srcdir)/TransferFunctionHandler.h $(srcdir)/VolumeRenderHandler.h
	CPPFLAGS=`simvoleon-config --cppflags` soqt-config --compile $<

readvol@EXEEXT@: $(READVOL_OBJECTS)
	soqt-config --link $@ $(READVOL_OBJECTS) `simvoleon-config --libs`

## ``examine'' example

$(srcdir)/examine.cpp: $(srcdir)/examine.cpp.in
	@soqt-config --ac-subst $<

$(srcdir)/examine.@OBJEXT@: $(srcdir)/examine.cpp
	CPPFLAGS=`simvoleon-config --cppflags` soqt-config --compile $<

examine@EXEEXT@: $(EXAMINE_OBJECTS)
	soqt-config --link $@ $(EXAMINE_OBJECTS) `simvoleon-config --libs`

## ``orthoslicer'' example

$(srcdir)/orthoslicer.cpp: $(srcdir)/orthoslicer.cpp.in
	@soqt-config --ac-subst $<

$(srcdir)/orthoslicer.@OBJEXT@: $(srcdir)/orthoslicer.cpp $(srcdir)/TransferFunctionHandler.h
	CPPFLAGS=`simvoleon-config --cppflags` soqt-config --compile $<

orthoslicer@EXEEXT@: $(ORTHOSLICER_OBJECTS)
	soqt-config --link $@ $(ORTHOSLICER_OBJECTS) `simvoleon-config --libs`

## ``simple8bit'' example

$(srcdir)/simple8bit.cpp: $(srcdir)/simple8bit.cpp.in
	@soqt-config --ac-subst $<

$(srcdir)/simple8bit.@OBJEXT@: $(srcdir)/simple8bit.cpp
	CPPFLAGS=`simvoleon-config --cppflags` soqt-config --compile $<

simple8bit@EXEEXT@: $(SIMPLE8BIT_OBJECTS)
	soqt-config --link $@ $(SIMPLE8BIT_OBJECTS) `simvoleon-config --libs`

## ``changingdataset'' example

$(srcdir)/changingdataset.cpp: $(srcdir)/changingdataset.cpp.in
	@soqt-config --ac-subst $<

$(srcdir)/changingdataset.@OBJEXT@: $(srcdir)/changingdataset.cpp
	CPPFLAGS=`simvoleon-config --cppflags` soqt-config --compile $<

changingdataset@EXEEXT@: $(CHANGINGDATASET_OBJECTS)
	soqt-config --link $@ $(CHANGINGDATASET_OBJECTS) `simvoleon-config --libs`

## ``raypick'' example

$(srcdir)/raypick.cpp: $(srcdir)/raypick.cpp.in
	@soqt-config --ac-subst $<

$(srcdir)/raypick.@OBJEXT@: $(srcdir)/raypick.cpp
	CPPFLAGS=`simvoleon-config --cppflags` soqt-config --compile $<

raypick@EXEEXT@: $(RAYPICK_OBJECTS)
	soqt-config --link $@ $(RAYPICK_OBJECTS) `simvoleon-config --libs`

## ``rgbload'' example

$(srcdir)/rgbload.cpp: $(srcdir)/rgbload.cpp.in
	@soqt-config --ac-subst $<

$(srcdir)/rgbload.@OBJEXT@: $(srcdir)/rgbload.cpp
	CPPFLAGS="`simvoleon-config --cppflags` `simage-config --cppflags`" soqt-config --compile $<

rgbload@EXEEXT@: $(RGBLOAD_OBJECTS)
	soqt-config --link $@ $(RGBLOAD_OBJECTS) `simvoleon-config --libs` `simage-config --libs`

## end
